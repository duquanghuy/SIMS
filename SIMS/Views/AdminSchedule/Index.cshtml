@model SIMS.Models.ViewModels.CalendarViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Weekly Schedule";
    var days = new[] {
        System.DayOfWeek.Monday,
        System.DayOfWeek.Tuesday,
        System.DayOfWeek.Wednesday,
        System.DayOfWeek.Thursday,
        System.DayOfWeek.Friday,
        System.DayOfWeek.Saturday,
        System.DayOfWeek.Sunday
    };
    var times = new[] { "Morning", "Afternoon" };
}

<h2>@ViewData["Title"]</h2>

<table class="table table-bordered text-center">
    <thead>
        <tr>
            <th>Time Slot</th>
            @foreach (var day in days)
            {
                <th>@day</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var slot in times)
        {
            <tr>
                <td><strong>@slot</strong></td>
                @foreach (var day in days)
                {
                    var cellId = $"modal_{day}_{slot}";
                    <td>
                        @{
                            // Get all assigned classes for this cell
                            var assigned = (Model.Slots != null && Model.Slots.ContainsKey(day) && Model.Slots[day] != null && Model.Slots[day].ContainsKey(slot))
                                ? Model.Slots[day][slot]
                                : new List<SIMS.Models.ClassSchedule>();
                        }
                        @if (assigned.Any())
                        {
                            foreach (var sched in assigned)
                            {
                                var removeId = $"remove_{sched.ScheduleId}";
                                <div class="mb-1 d-flex align-items-center justify-content-between">
                                    <span class="badge bg-primary flex-grow-1">
                                        @sched.Class?.Subject?.Code - @sched.Class?.Teacher?.FirstName @sched.Class?.Teacher?.LastName
                                    </span>
                                    <button type="button" class="btn btn-sm btn-danger ms-2" data-bs-toggle="modal" data-bs-target="#@removeId" title="Remove">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </div>
                                <!-- Remove Confirmation Modal -->
                                <div class="modal fade" id="@removeId" tabindex="-1" aria-labelledby="@(removeId + "_Label")" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="@(removeId + "_Label")">Remove Class</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Are you sure you want to remove <strong>@sched.Class?.Subject?.Code - @sched.Class?.Teacher?.FirstName @sched.Class?.Teacher?.LastName</strong> from <strong>@day @slot</strong>?</p>
                                            </div>
                                            <div class="modal-footer">
                                                <form asp-action="Unassign" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="scheduleId" value="@sched.ScheduleId" />
                                                    <input type="hidden" name="weekOffset" value="@Model.WeekOffset" />
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <button type="submit" class="btn btn-danger">Remove</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        <button type="button" class="btn btn-sm btn-success mt-1" data-bs-toggle="modal" data-bs-target="#@cellId">
                            Add
                        </button>
                        <!-- Modal -->
                        <div class="modal fade" id="@cellId" tabindex="-1" aria-labelledby="@(cellId + "_Label")" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="@(cellId + "_Label")">Add Class to @day @slot</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-action="Assign" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="weekOffset" value="@Model.WeekOffset" />
                                            <input type="hidden" name="SelectedDay" value="@day" />
                                            <input type="hidden" name="SelectedTimeSlot" value="@slot" />
                                            <div class="mb-3">
                                                <label for="classDropdown_@cellId" class="form-label">Class</label>
                                                <select id="classDropdown_@cellId" name="SelectedClassId" class="form-select" onchange="toggleAddButton('@cellId')">
                                                    <option value="">— Select Class —</option>
                                                    @{
                                                        // Get all class IDs already assigned to this slot
                                                        var assignedClassIds = assigned.Select(a => a.ClassId).ToHashSet();
                                                        // Filter Model.AllClasses to exclude already assigned
                                                        foreach (var item in Model.AllClasses)
                                                        {
                                                            var classId = int.Parse(item.Value);
                                                            if (!assignedClassIds.Contains(classId))
                                                            {
                                                                <option value="@item.Value">@item.Text</option>
                                                            }
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <button type="submit" class="btn btn-primary" id="addBtn_@cellId" disabled>Add</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<script>
    function toggleAddButton(cellId) {
        var select = document.getElementById('classDropdown_' + cellId);
        var btn = document.getElementById('addBtn_' + cellId);
        btn.disabled = !select.value;
    }
    // Optionally, initialize all buttons on modal show
    document.addEventListener('shown.bs.modal', function (event) {
        var modal = event.target;
        var selects = modal.querySelectorAll('select[id^="classDropdown_"]');
        selects.forEach(function(select) {
            var cellId = select.id.replace('classDropdown_', '');
            toggleAddButton(cellId);
        });
    }, true);
</script>
