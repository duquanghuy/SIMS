@{
    ViewData["Title"] = "Manage Admins";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Manage Admins</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAdminModal">
        <i class="fa fa-plus"></i> Add New Admin
    </button>
</div>

<!-- Add Admin Modal -->
<div class="modal fade" id="addAdminModal" tabindex="-1" aria-labelledby="addAdminModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createAdminForm" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAdminModalLabel">Add New Admin</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input name="Email" type="email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input name="Password" type="password" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Search Form -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">Search Admins</h5>
    </div>
    <div class="card-body">
        <form method="get" action="@Url.Action("Index", "AdminAdmins")" class="row g-3">
            <div class="col-md-6">
                <label for="searchEmail" class="form-label">Email</label>
                <input type="text" class="form-control" id="searchEmail" name="searchEmail" 
                       value="@ViewData["SearchEmail"]" placeholder="Enter admin email address">
            </div>
            <div class="col-md-6 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fa fa-search"></i> Search
                </button>
                <a href="@Url.Action("Index", "AdminAdmins")" class="btn btn-secondary">
                    <i class="fa fa-times"></i> Clear
                </a>
            </div>
        </form>
    </div>
</div>

<h3 class="mt-4 mb-2">Admin List</h3>

@await Component.InvokeAsync("Table", new
    {
        items = ViewData["Admins"],
        columns = ViewData["Columns"]
    })

@{
    var paginationModel = ViewData["Pagination"] as SIMS.ViewModels.PaginationModel;
}

@if (paginationModel != null)
{
    @await Component.InvokeAsync("Pagination", new
        {
            currentPage = paginationModel.CurrentPage,
            pageSize = paginationModel.PageSize,
            totalItems = paginationModel.TotalItems,
            action = paginationModel.Action,
            controller = paginationModel.Controller
        })
}

@section Scripts {
    <script>
        $('#createAdminForm').on('submit', function (e) {
            e.preventDefault();
            $.ajax({
                url: '@Url.Action("CreateAdmin", "AdminAdmins")',
                method: 'POST',
                data: $(this).serialize(),
                success: function () {
                    alert('✅ Admin created!');
                    window.location.reload();
                },
                error: function (xhr) {
                    alert('❌ ' + xhr.responseText);
                }
            });
        });

        function editAdmin(userId) {
            const newPassword = prompt("Enter new password:");
            if (!newPassword) return;

            $.post('@Url.Action("UpdateAdmin", "AdminAdmins")', {
                userId: userId,
                newPassword: newPassword
            })
            .done(() => {
                alert('✅ Password updated!');
                window.location.reload();
            })
            .fail(xhr => alert('❌ ' + xhr.responseText));
        }

        function deleteAdmin(userId) {
            if (!confirm("Are you sure you want to delete this admin?")) return;

            $.ajax({
                url: '@Url.Action("Delete", "AdminAdmins")' + '?userId=' + userId,
                method: 'GET',
                success: function () {
                    alert('✅ Admin deleted.');
                    window.location.reload();
                },
                error: function (xhr) {
                    alert('❌ ' + xhr.responseText);
                }
            });
        }
    </script>
}
